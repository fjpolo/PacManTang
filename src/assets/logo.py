#!/usr/bin/python3

# generate LOGO lines for gowin_dpb_menu.v

# 72 columns, 14 rows
LOGO = ["00000000000000000000001111111111000001111111110000000000000000000000000000000",
        "0000000000000000000111111110011110001111111110000000000000000000000000000000",
        "0000000000000000011111111110011111000001110000000000000000000000000000000000",
        "0000000000000000111111111111111111100001110000011111000111111100001111110000",
        "0000000000000001111111111111110000000001110000110011100111001110011100111000",
        "0000000000000001111111111111000000000001110000000011100110001110011000111000",
        "0000000000000001111111111111110000000001110000111111100110001110111000111000",
        "0000000000000000111111111111111111100001110001111111100110001110111000111000",
        "0000000000000000011111111111111111000001100001110011100110001110011001111000",
        "0000000000000000001111111111111110000001100000111111100110001110001111111000",
        "0000000000000000000000000000000000000000000000000000000000000000000000111000",
        "0000000000000000000000000000000000000000000000000000000000000000011001110000",
        "0000000000000000000000000000000000000000000000000000000000000000011111100000",
        "0000000000000000000000000000000000000000000000000000000000000000000000000000",
        ]

# gowin_dpb_menu.v's logo format is 9 bytes per row, 14 rows, in total 126 bytes

r = []

for i in range(126):
    j = i % 9
    s = LOGO[i // 9][j*8 : j*8+8]
    b = 0
    for k in range(8):
        if s[k] == '1':
            b += 1 << k
    # print("{} -> {:02X}".format(s, b))
    r.append(b)

assert(len(r) == 126)

r.append(0)
r.append(0)

for i in range(4):
    off = i * 32
    print("defparam dpb_inst_0.INIT_RAM_{:02X} = 256'h".format(0x1C+i), end='')
    for j in range(31, -1, -1):     # 31, 30, ...
        print("{:02X}".format(r[off+j]), end='')
    print()

